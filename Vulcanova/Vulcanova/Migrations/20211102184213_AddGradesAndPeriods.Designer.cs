// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vulcanova.Core.Data;

namespace Vulcanova.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211102184213_AddGradesAndPeriods")]
    partial class AddGradesAndPeriods
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("Vulcanova.Features.Auth.Accounts.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ConstituentUnitId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PupilId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UnitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ConstituentUnitId");

                    b.HasIndex("PupilId");

                    b.HasIndex("UnitId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Vulcanova.Features.Auth.Accounts.ConstituentUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Patron")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SchoolTopic")
                        .HasColumnType("TEXT");

                    b.Property<string>("Short")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ConstituentUnit");
                });

            modelBuilder.Entity("Vulcanova.Features.Auth.Accounts.Pupil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<int>("LoginId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoginValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Sex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pupil");
                });

            modelBuilder.Entity("Vulcanova.Features.Auth.Accounts.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Patron")
                        .HasColumnType("TEXT");

                    b.Property<string>("RestUrl")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SchoolTopic")
                        .HasColumnType("TEXT");

                    b.Property<string>("Short")
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("Vulcanova.Features.Grades.Column", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<int>("Color")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Group")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PeriodId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Column");
                });

            modelBuilder.Entity("Vulcanova.Features.Grades.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ColumnId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContentRaw")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatorName")
                        .HasColumnType("TEXT");

                    b.Property<int>("PupilId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.ToTable("Grade");
                });

            modelBuilder.Entity("Vulcanova.Features.LuckyNumber.LuckyNumber", b =>
                {
                    b.Property<int>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConstituentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("_id");

                    b.ToTable("LuckyNumbers");
                });

            modelBuilder.Entity("Vulcanova.Features.Shared.Period", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Current")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Period");
                });

            modelBuilder.Entity("Vulcanova.Features.Auth.Accounts.Account", b =>
                {
                    b.HasOne("Vulcanova.Features.Auth.Accounts.ConstituentUnit", "ConstituentUnit")
                        .WithMany()
                        .HasForeignKey("ConstituentUnitId");

                    b.HasOne("Vulcanova.Features.Auth.Accounts.Pupil", "Pupil")
                        .WithMany()
                        .HasForeignKey("PupilId");

                    b.HasOne("Vulcanova.Features.Auth.Accounts.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("ConstituentUnit");

                    b.Navigation("Pupil");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Vulcanova.Features.Grades.Grade", b =>
                {
                    b.HasOne("Vulcanova.Features.Grades.Column", "Column")
                        .WithMany()
                        .HasForeignKey("ColumnId");

                    b.OwnsOne("Vulcanova.Uonet.Api.Grades.Date", "DateCreated", b1 =>
                        {
                            b1.Property<int>("GradeId")
                                .HasColumnType("INTEGER");

                            b1.Property<DateTime>("DateDate")
                                .HasColumnType("TEXT");

                            b1.Property<string>("DateDisplay")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("Time")
                                .HasColumnType("TEXT");

                            b1.Property<long>("Timestamp")
                                .HasColumnType("INTEGER");

                            b1.HasKey("GradeId");

                            b1.ToTable("Grade");

                            b1.WithOwner()
                                .HasForeignKey("GradeId");
                        });

                    b.OwnsOne("Vulcanova.Uonet.Api.Grades.Date", "DateModify", b1 =>
                        {
                            b1.Property<int>("GradeId")
                                .HasColumnType("INTEGER");

                            b1.Property<DateTime>("DateDate")
                                .HasColumnType("TEXT");

                            b1.Property<string>("DateDisplay")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("Time")
                                .HasColumnType("TEXT");

                            b1.Property<long>("Timestamp")
                                .HasColumnType("INTEGER");

                            b1.HasKey("GradeId");

                            b1.ToTable("Grade");

                            b1.WithOwner()
                                .HasForeignKey("GradeId");
                        });

                    b.Navigation("Column");

                    b.Navigation("DateCreated");

                    b.Navigation("DateModify");
                });

            modelBuilder.Entity("Vulcanova.Features.Shared.Period", b =>
                {
                    b.HasOne("Vulcanova.Features.Auth.Accounts.Account", null)
                        .WithMany("Periods")
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("Vulcanova.Features.Auth.Accounts.Account", b =>
                {
                    b.Navigation("Periods");
                });
#pragma warning restore 612, 618
        }
    }
}
