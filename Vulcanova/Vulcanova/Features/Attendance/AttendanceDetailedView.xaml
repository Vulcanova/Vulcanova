<?xml version="1.0" encoding="utf-8"?>

<rxui:ReactiveContentView x:TypeArguments="local:AttendanceDetailedViewModel"
                          xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
                          xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                          xmlns:local="clr-namespace:Vulcanova.Features.Attendance;assembly=Vulcanova"
                          xmlns:calendar="clr-namespace:Vulcanova.Core.Layout.Controls.Calendar;assembly=Vulcanova"
                          xmlns:resx="clr-namespace:Vulcanova.Resources;assembly=Vulcanova"
                          xmlns:controls="clr-namespace:Vulcanova.Core.Layout.Controls;assembly=Vulcanova"
                          xmlns:rxui="clr-namespace:ReactiveUI.Maui;assembly=ReactiveUI.Maui"
                          xmlns:compatibility="clr-namespace:Microsoft.Maui.Controls.Compatibility;assembly=Microsoft.Maui.Controls"
                          xmlns:effects="clr-namespace:Xamarin.CommunityToolkit.Effects;assembly=Xamarin.CommunityToolkit.MauiCompat"
                          x:Class="Vulcanova.Features.Attendance.AttendanceDetailedView">
    <ContentPage.Content>
        <compatibility:RelativeLayout>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <calendar:Calendar
                    x:Name="Calendar"
                    Padding="0, 10"
                    SelectedColor="{AppThemeBinding Dark={StaticResource DarkTranslucentPrimaryColor}, Light={StaticResource LightTranslucentPrimaryColor}}"
                    TextColor="{AppThemeBinding Dark={StaticResource DarkPrimaryTextColor}, Light={StaticResource LightPrimaryTextColor}}"
                    SelectedTextColor="{AppThemeBinding Dark={StaticResource DarkPrimaryColor}, Light={StaticResource LightPrimaryColor}}"
                    SecondaryTextColor="{AppThemeBinding Dark={StaticResource DarkSecondaryTextColor}, Light={StaticResource LightSecondaryTextColor}}" />
                <RefreshView Grid.Row="1" x:Name="RefreshView">
                    <CollectionView x:Name="EntriesList" SelectionMode="Multiple">
                        <CollectionView.EmptyView>
                            <Grid VerticalOptions="FillAndExpand" x:Name="NoElementsView">
                                <StackLayout Padding="16" VerticalOptions="Center">
                                    <Label HorizontalTextAlignment="Center"
                                           Text="{x:Static resx:Strings.NoAttendanceLabel}" />
                                </StackLayout>
                            </Grid>
                        </CollectionView.EmptyView>
                        <CollectionView.ItemTemplate>
                            <DataTemplate x:DataType="local:LessonViewModel">
                                <StackLayout Padding="0, 1" Spacing="0"
                                             effects:TouchEffect.PressedBackgroundColor="{AppThemeBinding Light={StaticResource LightBorderColor}, Dark={StaticResource DarkBorderColor}}"
                                             effects:TouchEffect.CommandParameter="{Binding Lesson.Id}"
                                             effects:TouchEffect.Command="{Binding Source={RelativeSource AncestorType={x:Type local:AttendanceDetailedViewModel}}, Path=ShowLessonDetails}">
                                    <local:LessonView Lesson="{Binding Lesson}" IsSelected="{Binding IsSelected}"
                                                      JustificationMode="{Binding Source={RelativeSource AncestorType={x:Type local:AttendanceDetailedViewModel}}, Path=JustificationMode}" />
                                    <BoxView Style="{StaticResource SeparatorStyle}" />
                                </StackLayout>
                            </DataTemplate>
                        </CollectionView.ItemTemplate>
                    </CollectionView>
                </RefreshView>
            </Grid>
            <controls:FloatingButton
                IsVisible="False"
                x:Name="EnableJustificationButton"
                Source="resource://Vulcanova.Resources.Icons.checkmark-done-outline.svg"
                compatibility:RelativeLayout.XConstraint="{compatibility:ConstraintExpression Type=RelativeToParent, Property=Width, Constant=-72}"
                compatibility:RelativeLayout.YConstraint="{compatibility:ConstraintExpression Type=RelativeToParent, Property=Height, Constant=-72}" />
            <controls:FloatingButton
                IsVisible="False"
                x:Name="JustifyButton"
                Source="resource://Vulcanova.Resources.Icons.checkmark-outline.svg"
                compatibility:RelativeLayout.XConstraint="{compatibility:ConstraintExpression Type=RelativeToParent, Property=Width, Constant=-72}"
                compatibility:RelativeLayout.YConstraint="{compatibility:ConstraintExpression Type=RelativeToParent, Property=Height, Constant=-72}" />
        </compatibility:RelativeLayout>
    </ContentPage.Content>
</rxui:ReactiveContentView>